{"name":"Rozu","tagline":"Webhook server","body":"# Rozu\r\nRozu is a webhook API server, using MongoDB for persistent storage & Redis for pub/sub of inbound events\r\n\r\n![demo graphic](https://farm9.staticflickr.com/8892/18285216659_3508c5ed9f_o.png \"rozu demo\")\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/rozu.svg)](http://travis-ci.org/avoidwork/rozu)\r\n\r\nEach response will include a `Link` header, and an `Array` of `Objects` with `IANA` defined `rel` properties & URIs.\r\n\r\n## Receiving webhook events\r\nRozu has a publically accessible route `/receive` which will accept a JSON or form encoded payload & put it into **Redis**\r\nfor pub/sub behavior in your local stack. Inbound requests must include a user supplied token (`token` in `config.json`)\r\nwhich maps to a registered webhook; tokens are v1 UUIDs.\r\n\r\nInbound events will be published with a channel name of `config.id_webhook.name`, e.g. \"rozu_github\".\r\n\r\n## Sending webhook events\r\nThis will be implemented in 1.1.0!\r\n\r\n## Requirements\r\n- node.js or io.js\r\n- MongoDB (persistent storage of accounts, & webhook configurations)\r\n- Redis (pub/sub for local stack of inbound events)\r\n- (Optional) nginx for SSL termination, & reverse proxy\r\n\r\n## How do I run Rozu?\r\n`Rozu` can be up and running in 3 steps! When run in a production environment, it's recommended that you use `nginx`\r\nto terminate SSL, and reverse proxy to `Rozu`. Using a daemon like `upstart` (on Linux) to run `rozu` is ideal. \r\n\r\n1.  Clone [this](https://github.com/avoidwork/rozu) repository, or install from `npm`:\r\n    1.  `$ npm install rozu`\r\n    2.  `$ ln -s node_modules/rozu/config.json config.json`\r\n    3.  `$ ln -s node_modules/rozu/lib/app.js app.js`\r\n2.  Edit `config.json` to configure your email server, etc.\r\n3.  Run via `node index.js`\r\n4.  (Optional) Use the provided upstart recipe: `sudo cp node_modules/rozu/rozu.conf /etc/init & service start rozu`\r\n\r\n## Getting Started\r\nThe following steps outline how the system is intended to be utilized.\r\n\r\n- Register an account\r\n- Verify account\r\n- Login with account\r\n- Create a webhook by registering the remote host\r\n\r\n\r\n## Registration\r\nTo register, make a `GET` request to `/register` to retrieve instructions.\r\n\r\nRegistration is a two step process, requiring email verification. Please fill out `email` in `config.json`.\r\n\r\n## Authentication\r\nTo authenticate, make a `GET` request to `/login` to retrieve instructions.\r\n\r\nTo logout, make a `GET` request to `/logout`.\r\n\r\n## Your Profile\r\nMake a `GET` request to `/profile`. You will have CRUD operations, defined by the `allow` header.\r\n\r\n## Getting Administrator Access\r\nOnce authenticated, make `GET` request to `/admin`; this requires your account email address in the `admin` Array in `config.json`.\r\n\r\n## Routes\r\nA `GET` request to `/` will return different results, depending upon the state of your session.\r\n\r\n### Unauthenticated\r\n\r\n```json\r\n{\r\n\t\"status\": 200,\r\n\t\"error\": null,\r\n\t\"data\": {\r\n\t\t\"link\": [\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/login\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/receive\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/register\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"result\": [\r\n\t\t\t\"/login\",\r\n\t\t\t\"/receive\",\r\n\t\t\t\"/register\"\r\n\t\t]\r\n\t}\r\n}\r\n```\r\n\r\n### Authenticated\r\n\r\n```json\r\n{\r\n\t\"status\": 200,\r\n\t\"error\": null,\r\n\t\"data\": {\r\n\t\t\"link\": [\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/admin\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/logout\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/profile\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/receive\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/send\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/stream\"\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/users\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"rel\": \"item\",\r\n\t\t\t\t\"uri\": \"http://localhost:8090/webhooks\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"result\": [\r\n\t\t\t\"/admin\",\r\n\t\t\t\"/logout\",\r\n\t\t\t\"/profile\",\r\n\t\t\t\"/receive\",\r\n\t\t\t\"/send\",\r\n\t\t\t\"/stream\",\r\n\t\t\t\"/users\",\r\n\t\t\t\"/webhooks\"\r\n\t\t]\r\n\t}\r\n}\r\n```\r\n\r\n## License\r\nCopyright (c) 2015 Jason Mulligan  \r\nAll Rights Reserved\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}